// Indicator.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

template <typename T>
void my_swap(T num1, T num2) {
	T tmp = num1;
	num1 = num2;
	num2 = tmp;
}

template <typename T>
void p_swap(T* pnum1, T* pnum2) {
	T tmp = *pnum1;
	*pnum1 = *pnum2;
	*pnum2 = tmp;
}

int main() {
	setlocale(LC_ALL, "rus");
	int n, m;
	

	//Указатели на переменные

	/*n = 10;
	int *pn; //pointerN
	m = 20;
	std::cout << "n= " << n << std::endl;//вывод значения переменной
	std::cout << "&n= " << &n << std::endl;//вывод адреса переменной
	pn = &n; //создание указателя, направленного на переменную n
	std::cout << "pn= " << pn << std::endl;

	std::cout << "*pn=" << *pn << std::endl;//разыменование указателя - операция, применяемая только к указателям и позволяющая обратиться к объекту на который направлен указатель*
	*pn = 15;//обращение к переменной n через празименование указателя pn
	std::cout << "Новая n = " << n << std::endl;
	pn = &m;//перенаправление указателя на переменную m
	std::cout << "&m=" << &m << std::endl;
	std::cout << "pn=" << pn << std::endl;

	int* pm = &m;
	std::cout << "pm=" << pm << std::endl;
	*pm = 25;
	std::cout << "m=" << m << std::endl;
	std::cout << "*pn=" << *pn << std::endl;
	std::cout << "*pm=" << *pm << std::endl;*/

	//Указатели в массивах

	/*const int SIZE = 5;
	int arr[SIZE]{ 10, 7, 105, 88, 90 };
	int* pa2 = &arr[2];
	std::cout << "*pa2=" << *pa2 << std::endl;
	pa2++;
	std::cout << "*pa2=" << *pa2 << std::endl;// arr[3] = 88 афметика указателей - процесс сдвига указателей относительно их текущего значения вперед или назад в зависимости от применяемого к ним сложения или вычитания соответственно
	pa2 -= 2;
	std::cout << "*pa2=" << *pa2 << std::endl;//arr[1] = 7

	//Ограничения арифметики указателей:
	// 1. Работает ТОЛЬКО со сложением и вычитанием
	// 2. Нельзя складывать адреса, но можно их вычитать
	// 3. Нельзя работать с вещественным типом данных

	pa2 = &arr[0];
	for (int i = 0; i < SIZE; i++)
		std::cout << *(pa2 + i) << ' ';//*(pa2 + i) разименование всего выражения
	std::cout << std::endl;

	std::cout << "arr= " << arr << std::endl;//Имя массива - указатель на его первый эллемент или указатель на место в памяти из котрой начинается последовательность эллемиентов. Данный указатель  не может быть перенаправлен на другую область памяти
	std::cout << "pa2= " << pa2 << std::endl;

	int sum = 0;
	for (int i = 0; i < SIZE; i++)
		sum += *(arr + i);
	std::cout << "sum= " << sum << std::endl;
	//arr = &n; //Ошибка - Данный указатель  не может быть перенаправлен на другую область памяти
	//arr++;
	//arr -= 2;

	//Размерность указателя НЕ ЗАВИСИТ ОТ ТИПА ДЫННЫХ НА КОТОРЫЙ ОН НАПРАВЛЕН. зАВИСИТ ОТ РАЗРЯДНОСТИ ОПЕРАЦИОННОЙ СИСТЕМЫ
	// В 64-битных - 8 байт, а 32 - 4 байта*/

	//Указатели и функции

	n = 7;
	m = 15;
	std::cout << n << ' ' << m << std::endl;
	//my_swap(n, m); Не работает т.к. параметры это копии аргументов
	p_swap(&n, &m);//Передаем адреса
	std::cout << n << ' ' << m << std::endl;

	//Области применения указателей:
	// 1. Работа с массивами
	// 2. Удаленный доступ к данным
	// 3. Выделение динамической памяти
	// 4. Экономия памяти

}